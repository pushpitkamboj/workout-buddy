services:
  # NGINX Load Balancer
  nginx-lb:
    image: nginx:alpine
    container_name: fitness-nginx-lb
    ports:
      - "8080:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - api-gateway-1
      - api-gateway-2
      - api-gateway-3
    restart: unless-stopped
    networks:
      - fitness-network
  # Redis for shared rate limiting
  redis:
    image: redis:7-alpine
    container_name: fitness-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - fitness-network

  # User Service
  user-service:
    build: 
      context: .
      dockerfile: packages/user-service/Dockerfile
    container_name: fitness-user-service
    env_file:
      - packages/user-service/.env
      - packages/shared/.env
    environment:
      - NODE_ENV=development
      - PORT=3005
    ports:
      - "3005:3005"
    restart: unless-stopped
    networks:
      - fitness-network

  # Workout Service
  workout-service:
    build: 
      context: .
      dockerfile: packages/workout-service/Dockerfile
    container_name: fitness-workout-service
    env_file:
      - packages/workout-service/.env
      - packages/shared/.env
    environment:
      - NODE_ENV=development
      - PORT=3006
    ports:
      - "3006:3006"
    restart: unless-stopped
    networks:
      - fitness-network

  # API Gateway Instance 1
  api-gateway-1:
    build: 
      context: .
      dockerfile: packages/api-gateway/Dockerfile
    container_name: fitness-api-gateway-1
    env_file:
      - packages/api-gateway/.env
    environment:
      - GATEWAY_ID=gateway-1
      - USER_SERVICE_URL=http://user-service:3005
      - WORKOUT_SERVICE_URL=http://workout-service:3006
      - REDIS_URL=redis://redis:6379
      - NODE_ENV=development
    ports:
      - "3001:3000"
    depends_on:
      - redis
      - user-service
      - workout-service
    restart: unless-stopped
    networks:
      - fitness-network

  # API Gateway Instance 2
  api-gateway-2:
    build: 
      context: .
      dockerfile: packages/api-gateway/Dockerfile
    container_name: fitness-api-gateway-2
    env_file:
      - packages/api-gateway/.env
    environment:
      - GATEWAY_ID=gateway-2
      - USER_SERVICE_URL=http://user-service:3005
      - WORKOUT_SERVICE_URL=http://workout-service:3006
      - REDIS_URL=redis://redis:6379
      - NODE_ENV=development
    ports:
      - "3002:3000"
    depends_on:
      - redis
      - user-service
      - workout-service
    restart: unless-stopped
    networks:
      - fitness-network

  # API Gateway Instance 3
  api-gateway-3:
    build: 
      context: .
      dockerfile: packages/api-gateway/Dockerfile
    container_name: fitness-api-gateway-3
    env_file:
      - packages/api-gateway/.env
    environment:
      - GATEWAY_ID=gateway-3
      - USER_SERVICE_URL=http://user-service:3005
      - WORKOUT_SERVICE_URL=http://workout-service:3006
      - REDIS_URL=redis://redis:6379
      - NODE_ENV=development
    ports:
      - "3003:3000"
    depends_on:
      - redis
      - user-service
      - workout-service
    restart: unless-stopped
    networks:
      - fitness-network

volumes:
  redis_data:

networks:
  fitness-network:
    driver: bridge