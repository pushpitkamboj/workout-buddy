#!/bin/bash

# Fitness Tracker 2.0 - Deployment Script
# This script builds and deploys the load-balanced API gateway setup

set -e

echo "üöÄ Starting Fitness Tracker 2.0 deployment..."

# Create logs directory for nginx
mkdir -p logs/nginx

# Check if .env file exists
if [ ! -f .env ]; then
    echo "‚ö†Ô∏è  .env file not found. Creating from template..."
    cp .env.example .env
    echo "üìù Please edit .env file with your configuration before proceeding!"
    exit 1
fi

# Build and start services
echo "üîß Building and starting services..."
docker-compose down --remove-orphans
docker-compose build --no-cache
docker-compose up -d

# Wait for services to be ready
echo "‚è≥ Waiting for services to be ready..."
sleep 30

# Check service health
echo "üîç Checking service health..."

# Check Redis
if docker-compose exec -T redis redis-cli ping | grep -q PONG; then
    echo "‚úÖ Redis is healthy"
else
    echo "‚ùå Redis is not responding"
fi

# Check API Gateways
for i in {1..3}; do
    if curl -s -f http://localhost:300$i/health > /dev/null; then
        echo "‚úÖ API Gateway $i is healthy"
    else
        echo "‚ùå API Gateway $i is not responding"
    fi
done

# Check NGINX Load Balancer
if curl -s -f http://localhost:8080/nginx-health > /dev/null; then
    echo "‚úÖ NGINX Load Balancer is healthy"
else
    echo "‚ùå NGINX Load Balancer is not responding"
fi

# Check User Service
if curl -s -f http://localhost:3005/health > /dev/null; then
    echo "‚úÖ User Service is healthy"
else
    echo "‚ùå User Service is not responding"
fi

# Check Workout Service
if curl -s -f http://localhost:3006/health > /dev/null; then
    echo "‚úÖ Workout Service is healthy"
else
    echo "‚ùå Workout Service is not responding"
fi

echo ""
echo "üéâ Deployment completed!"
echo ""
echo "üìä Service URLs:"
echo "  ‚Ä¢ Load Balancer:    http://api.localhost:8080"
echo "  ‚Ä¢ NGINX Health:     http://api.localhost:8080/nginx-health"
echo "  ‚Ä¢ API Gateway 1:    http://localhost:3001/health"
echo "  ‚Ä¢ API Gateway 2:    http://localhost:3002/health"
echo "  ‚Ä¢ API Gateway 3:    http://localhost:3003/health"
echo "  ‚Ä¢ User Service:     http://localhost:3005/health"
echo "  ‚Ä¢ Workout Service:  http://localhost:3006/health"
echo "  ‚Ä¢ Redis:            localhost:6379"
echo ""
echo "üîó API Endpoints through Load Balancer:"
echo "  ‚Ä¢ POST http://api.localhost:8080/api/auth/signup"
echo "  ‚Ä¢ POST http://api.localhost:8080/api/auth/login"
echo "  ‚Ä¢ GET  http://api.localhost:8080/api/user/hello-world"
echo "  ‚Ä¢ POST http://api.localhost:8080/api/workout/*"
echo ""
echo "üìà To view logs:"
echo "  docker-compose logs -f [service-name]"
echo ""
echo "üõë To stop all services:"
echo "  docker-compose down"
